#ifndef HELPER_H
#define HELPER_H
#include <QObject>

//native Popups:
#include <aknnotewrappers.h>
#include <akndiscreetpopup.h>

//File operations:
#include <bautils.h>
#include <f32file.h>

//Task killer/launcher
#include <apgtask.h>

//Clear AknIconSrv cache
#include <akniconconfig.h>

//native Reboot API
#include <starterclient.h>

_LIT(path, "C:\\system\\data\\whatsapp_notifier.rsc");

class Helper : public QObject
{
    Q_OBJECT    

public:

    Helper(QObject *parent = 0) : QObject(parent){}

    Q_INVOKABLE void launch() const{ //launching WhatsApp
        RProcess proc;
        User::LeaveIfError(proc.Create(_L("WhatsApp.exe"),KNullDesC));
        proc.Resume();
        proc.Close();
    }

    Q_INVOKABLE void close(bool hidden){ //closing WhatsApp and show a note if it doesn't run
        TBool running = EFalse;

        TFullName res;
        TFindProcess find;
        while(find.Next(res) == KErrNone) {
            RProcess ph;
            User::LeaveIfError( ph.Open(res) );
            if(ph.SecureId() == 0x2002B30D)
            if (ph.ExitType() == EExitPending) {
                running = ETrue;
                break;
            }
            ph.Close();
        }

        if (!running) {
            if (!hidden){
                TRAP_IGNORE(CAknDiscreetPopup::ShowGlobalPopupL((_L("Error")), (_L("WhatsApp doesn't run.")),KAknsIIDNone, KNullDesC, 0, 0, 0x00000001));
            }
        }
        else {
            CAknConfirmationNote* killed = new (ELeave) CAknConfirmationNote;
            QT_TRAP_THROWING(killed->ExecuteLD(_L("Closed WhatsApp.")));

            kill(_L("*[2002B306]*"));
            kill(_L("*[2002B310]*"));
            kill(_L("*[2002B30D]*"));
        }
    }


//That's why I created this app:
//What's app creates a .rsc which stores the content of the homescreen popup and shows it.
//a lot of people don't like the popup, this function:
//1. kills WhatsApp, 2. removes the original .rsc 3. a new .rsc and sets it hidden+system+readonly
//WhatsApp can't overwrite it and so it shows no more popup
    Q_INVOKABLE void hide(){
        close(true);
        reset();
        CAknConfirmationNote* hidden = new (ELeave) CAknConfirmationNote;
        QT_TRAP_THROWING(hidden->ExecuteLD(_L("Disabled the popup.")));

        RFs fsSession;
        CleanupClosePushL(fsSession);
        User::LeaveIfError(fsSession.Connect());

        RFile rFile;
        User::LeaveIfError(rFile.Create(fsSession, path, EFileRead));
        rFile.Close();

        User::LeaveIfError(fsSession.SetAtt(path ,KEntryAttHidden|KEntryAttSystem,KEntryAttArchive));
        CleanupStack::PopAndDestroy(&fsSession);
    }

    Q_INVOKABLE void reset() const{ //reset the attributes of the .rsc and remove it
        RFs fsSession;
        CleanupClosePushL(fsSession);
        User::LeaveIfError(fsSession.Connect());

        if (BaflUtils::FileExists(fsSession, path)){
            User::LeaveIfError(fsSession.SetAtt(path, KEntryAttNormal,KEntryAttReadOnly | KEntryAttSystem | KEntryAttHidden));
            CFileMan* fileMan=CFileMan::NewL(fsSession);
            CleanupStack::PushL(fileMan);
            fileMan->Delete(path);
            CleanupStack::PopAndDestroy(fileMan);
        }

        CleanupStack::PopAndDestroy(&fsSession);
    }

    Q_INVOKABLE void resetNote(){ //note for enabling the popup
        close(true);
        reset();

        CAknConfirmationNote* noteConfirm = new (ELeave) CAknConfirmationNote;
        QT_TRAP_THROWING(noteConfirm->ExecuteLD(_L("Enabled the popup.")));
    }

    Q_INVOKABLE void note() const{ //info when opening .mif changer
        TRAP_IGNORE(CAknDiscreetPopup::ShowGlobalPopupL((_L("Info:")), (_L("You have to enable Open4All patch!")),KAknsIIDNone, KNullDesC, 0, 0, 0x00000001));
    }

    Q_INVOKABLE void icon(QString mif) const{ //change the current icon. QString mif is generated by the mif changer dialog,
        RFs fsSession;
        CleanupClosePushL(fsSession);
        User::LeaveIfError(fsSession.Connect());
        fsSession.SetAtt((_L("C:\\resource\\apps\\whatsapp_aif.mif")),KEntryAttNormal,KEntryAttReadOnly | KEntryAttSystem | KEntryAttHidden);
        fsSession.SetAtt((_L("E:\\resource\\apps\\whatsapp_aif.mif")),KEntryAttNormal,KEntryAttReadOnly | KEntryAttSystem | KEntryAttHidden);
        fsSession.SetAtt((_L("F:\\resource\\apps\\whatsapp_aif.mif")), KEntryAttNormal,KEntryAttReadOnly | KEntryAttSystem | KEntryAttHidden);

        CFileMan* fileMan=CFileMan::NewL(fsSession);
        CleanupStack::PushL(fileMan);
        fileMan->Delete(_L("C:\\resource\\apps\\whatsapp_aif.mif"));
        fileMan->Delete(_L("E:\\resource\\apps\\whatsapp_aif.mif"));
        fileMan->Delete(_L("F:\\resource\\apps\\whatsapp_aif.mif"));

        QString path = "E:\\icons\\" + mif + ".mif";
        TPtrC16 ipath(reinterpret_cast<const TUint16*>(path.utf16()));

        fileMan->Copy(ipath,(_L("C:\\resource\\apps\\whatsapp_aif.mif")));
        fileMan->Copy(ipath,(_L("E:\\resource\\apps\\whatsapp_aif.mif")));
        fileMan->Copy(ipath,(_L("F:\\resource\\apps\\whatsapp_aif.mif")));

        CleanupStack::PopAndDestroy(2);

        QString newmif = "Copied " + mif + ".mif";
        TPtrC16 note(reinterpret_cast<const TUint16*>(newmif.utf16()));
        TRAP_IGNORE(CAknDiscreetPopup::ShowGlobalPopupL((_L("Done.")), note ,KAknsIIDNone, KNullDesC, 0, 0, 0x00000001));
    }

    Q_INVOKABLE void del() const{
        RFs fsSession;
        CleanupClosePushL(fsSession);
        User::LeaveIfError(fsSession.Connect());
        fsSession.SetAtt((_L("C:\\resource\\apps\\whatsapp_aif.mif")),KEntryAttNormal,KEntryAttReadOnly | KEntryAttSystem | KEntryAttHidden);
        fsSession.SetAtt((_L("E:\\resource\\apps\\whatsapp_aif.mif")),KEntryAttNormal,KEntryAttReadOnly | KEntryAttSystem | KEntryAttHidden);
        fsSession.SetAtt((_L("F:\\resource\\apps\\whatsapp_aif.mif")),KEntryAttNormal,KEntryAttReadOnly | KEntryAttSystem | KEntryAttHidden);

        CFileMan* fileMan=CFileMan::NewL(fsSession);
        CleanupStack::PushL(fileMan);
        fileMan->Delete(_L("C:\\resource\\apps\\whatsapp_aif.mif"));
        fileMan->Delete(_L("E:\\resource\\apps\\whatsapp_aif.mif"));
        fileMan->Delete(_L("F:\\resource\\apps\\whatsapp_aif.mif"));

        CleanupStack::PopAndDestroy(2);

        CAknConfirmationNote* noteConfirm5 = new (ELeave) CAknConfirmationNote;
        QT_TRAP_THROWING(noteConfirm5->ExecuteLD(_L("Removed all whatsapp_aif.mif files.")));
    }

    Q_INVOKABLE void reboot(){
        RStarterSession starter;
        User::LeaveIfError(starter.Connect());
        starter.Reset(RStarterSession::ELanguageSwitchReset);
        starter.Close();
    }

    Q_INVOKABLE void clear() const{
        AknIconConfig::EnableAknIconSrvCache(EFalse);
        AknIconConfig::EnableAknIconSrvCache(ETrue);

        CAknConfirmationNote* noteConfirm6 = new (ELeave) CAknConfirmationNote;
        QT_TRAP_THROWING(noteConfirm6->ExecuteLD(_L("Done. Cleared icon cache. Re-add the icon to homescreen to show the new one.")));
    }

    /*return the current status of the homescreen popup
    Q_INVOKABLE void status() const{

    }*/

private:

    void kill(const TPtrC &UID) const {
        TFullName res;
        TFindProcess find(UID);
        while(find.Next(res) == KErrNone){
            RProcess ph;
            ph.Open(find);
            ph.Kill(KErrNone);
            ph.Close();
        }
    }

};

#endif // HELPER_H
